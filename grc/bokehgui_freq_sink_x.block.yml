# auto-generated by grc.converter

id: bokehgui_frequency_sink_x
label: Bokeh GUI Frequency Sink
category: '[Bokeh GUI]/Bokeh GUI Sinks'

parameters:
-   id: type
    label: Type
    dtype: enum
    default: complex
    options: [complex, float, msg_complex, msg_float]
    option_labels: [Complex, Float, Complex Message, Float Message]
    option_attributes:
        fcn: [freq_sink_c_proc, freq_sink_f_proc, freq_sink_c_proc, freq_sink_f_proc]
        plot: [freq_sink_c, freq_sink_f, freq_sink_c, freq_sink_f]
        t: [complex, float, message, message]
    hide: part
-   id: name
    label: Name
    dtype: string
    default: '""'
    hide: ${ ('none' if len(name) > 0 else 'part') }
-   id: fftsize
    label: FFT Size
    dtype: int
    default: '1024'
    hide: ${ ('all' if type.t == 'message' else 'none') }
-   id: freqhalf
    label: Spectrum Width
    dtype: enum
    default: 'False'
    options: ['False', 'True']
    option_labels: [Full, Half]
    hide: ${ ('part' if type == "float" or type == "msg_float" else 'all') }
-   id: wintype
    label: Window Type
    dtype: enum
    default: firdes.WIN_BLACKMAN_hARRIS
    options: [firdes.WIN_BLACKMAN_hARRIS, firdes.WIN_HAMMING, firdes.WIN_HANN, firdes.WIN_BLACKMAN,
        firdes.WIN_RECTANGULAR, firdes.WIN_KAISER, firdes.WIN_FLATTOP]
    option_labels: [Blackman-harris, Hamming, Hann, Blackman, Rectangular, Kaiser,
        Flat-top]
    hide: part
-   id: fc
    label: Center Frequency (Hz)
    dtype: real
    default: '0'
-   id: bw
    label: Bandwidth (Hz)
    dtype: real
    default: samp_rate
-   id: grid
    label: Grid
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: part
-   id: maxhold
    label: Max Hold
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: part
-   id: average
    label: Average
    dtype: enum
    default: 'False'
    options: ['1.0', '0.2', '0.1', '0.05']
    option_labels: [None, Low, Medium, High]
    hide: part
-   id: ymin
    label: Y min
    dtype: real
    default: '-140'
    hide: part
-   id: ymax
    label: Y max
    dtype: real
    default: '10'
    hide: part
-   id: ylabel
    label: Y label
    dtype: string
    default: Relative Gain
    hide: part
-   id: yunit
    label: Y units
    dtype: string
    default: dB
    hide: part
-   id: xlabel
    label: X Axis Label
    dtype: string
    default: Frequency
    hide: part
-   id: xunit
    label: X Axis Unit
    dtype: string
    default: '""'
    hide: part
-   id: nconnections
    label: Number of Inputs
    dtype: int
    default: '1'
    hide: ${ ('all' if type.t == 'message' else 'part') }
-   id: update_time
    label: Update Period (ms)
    dtype: int
    default: '100'
    hide: part
-   id: placement
    label: Placement
    dtype: int_vector
    hide: part
-   id: tr_mode
    label: Trigger Mode
    category: Trigger
    dtype: enum
    default: bokehgui.TRIG_MODE_FREE
    options: [bokehgui.TRIG_MODE_FREE, bokehgui.TRIG_MODE_AUTO, bokehgui.TRIG_MODE_NORM,
        bokehgui.TRIG_MODE_TAG]
    option_labels: [Free, Auto, Normal, Tag]
    hide: part
-   id: tr_level
    label: Trigger Level
    category: Trigger
    dtype: float
    default: '0.0'
    hide: part
-   id: tr_chan
    label: Trigger Channel
    category: Trigger
    dtype: int
    default: '0'
    hide: part
-   id: tr_tag
    label: Trigger Tag Key
    category: Trigger
    dtype: string
    default: '""'
    hide: part
-   id: legend
    label: Legend
    category: Config
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: part
-   id: axislabels
    label: Axis Labels
    category: Config
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: part
-   id: label1
    label: Line 1 Label
    default: "Signal 1"
    category: Config
    dtype: string
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: width1
    label: Line 1 Width
    category: Config
    dtype: int
    default: '1'
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: color1
    label: Line 1 Color
    category: Config
    dtype: enum
    options: ['"blue"', '"red"', '"green"', '"black"', '"cyan"', '"magenta"', '"yellow"',
        '"dark red"', '"dark green"', '"dark blue"']
    option_labels: [Blue, Red, Green, Black, Cyan, Magenta, Yellow, Dark Red, Dark
            Green, Dark Blue]
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: style1
    label: Line 1 Style
    category: Config
    dtype: enum
    options: ['"solid"', '"dashed"', '"dotted"', '"dashdot"', '"None"']
    option_labels: [Solid, Dash, Dots, Dash-Dot, None]
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: marker1
    label: Line 1 Marker
    category: Config
    dtype: enum
    options: [None, '''o''', '''*''', '''o+''', '''+''', '''d''', '''d+''', '''v''',
        '''s''', '''s+''', '''sx''', '''^''', '''x''']
    option_labels: [None, Circle, Star, Circle Plus, Plus, Diamond, Diamond Plus,
        Down Triangle, Square, Square Plus, Square Cross, Triangle, X-Cross]
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: alpha1
    label: Line 1 Alpha
    category: Config
    dtype: float
    default: '1.0'
    hide: ${ ('part' if int(nconnections) >= 1 else 'all') }
-   id: label2
    base_key: label1
    label: Line 2 Label
    default: "Signal 2"
    hide: ${ ('part' if int(nconnections) >= 2 else 'all') }
-   id: width2
    label: Line 2 Width
    base_key: width1
    hide: ${ ('part' if int(nconnections) >= 2 else 'all') }
-   id: color2
    label: Line 2 Color
    base_key: color1
    default: '"red"'
    hide: ${ ('part' if int(nconnections) >= 2 else 'all') }
-   id: style2
    label: Line 2 Style
    base_key: style1
    hide: ${ ('part' if int(nconnections) >= 2 else 'all') }
-   id: marker2
    label: Line 2 Marker
    base_key: marker1
    hide: ${ ('part' if int(nconnections) >= 2 else 'all') }
-   id: alpha2
    label: Line 2 Alpha
    base_key: alpha1
    hide: ${ ('part' if int(nconnections) >= 2 else 'all') }
-   id: label3
    label: Line 3 Label
    base_key: label1
    default: "Signal 3"
    hide: ${ ('part' if int(nconnections) >= 3 else 'all') }
-   id: width3
    label: Line 3 Width
    base_key: width1
    hide: ${ ('part' if int(nconnections) >= 3 else 'all') }
-   id: color3
    label: Line 3 Color
    base_key: color1
    default: '"green"'
    hide: ${ ('part' if int(nconnections) >= 3 else 'all') }
-   id: style3
    label: Line 3 Style
    base_key: style1
    hide: ${ ('part' if int(nconnections) >= 3 else 'all') }
-   id: marker3
    label: Line 3 Marker
    base_key: marker1
    hide: ${ ('part' if int(nconnections) >= 3 else 'all') }
-   id: alpha3
    label: Line 3 Alpha
    base_key: alpha1
    hide: ${ ('part' if int(nconnections) >= 3 else 'all') }
-   id: label4
    label: Line 4 Label
    base_key: label1
    default: "Signal 4"
    hide: ${ ('part' if int(nconnections) >= 4 else 'all') }
-   id: width4
    label: Line 4 Width
    base_key: width1
    hide: ${ ('part' if int(nconnections) >= 4 else 'all') }
-   id: color4
    label: Line 4 Color
    base_key: color1
    default: '"black"'
    hide: ${ ('part' if int(nconnections) >= 4 else 'all') }
-   id: style4
    label: Line 4 Style
    base_key: style1
    hide: ${ ('part' if int(nconnections) >= 4 else 'all') }
-   id: marker4
    label: Line 4 Marker
    base_key: marker1
    hide: ${ ('part' if int(nconnections) >= 4 else 'all') }
-   id: alpha4
    label: Line 4 Alpha
    base_key: alpha1
    hide: ${ ('part' if int(nconnections) >= 4 else 'all') }
-   id: label5
    label: Line 5 Label
    base_key: label1
    default: "Signal 5"
    hide: ${ ('part' if int(nconnections) >= 5 else 'all') }
-   id: width5
    label: Line 5 Width
    base_key: width1
    hide: ${ ('part' if int(nconnections) >= 5 else 'all') }
-   id: color5
    label: Line 5 Color
    base_key: color1
    default: '"cyan"'
    hide: ${ ('part' if int(nconnections) >= 5 else 'all') }
-   id: style5
    label: Line 5 Style
    base_key: style1
    hide: ${ ('part' if int(nconnections) >= 5 else 'all') }
-   id: marker5
    label: Line 5 Marker
    base_key: marker1
    hide: ${ ('part' if int(nconnections) >= 5 else 'all') }
-   id: alpha5
    label: Line 5 Alpha
    base_key: alpha1
    hide: ${ ('part' if int(nconnections) >= 5 else 'all') }
-   id: label6
    label: Line 6 Label
    base_key: label1
    default: "Signal 6"
    hide: ${ ('part' if int(nconnections) >= 6 else 'all') }
-   id: width6
    label: Line 6 Width
    base_key: width1
    hide: ${ ('part' if int(nconnections) >= 6 else 'all') }
-   id: color6
    label: Line 6 Color
    base_key: color1
    default: '"magenta"'
    hide: ${ ('part' if int(nconnections) >= 6 else 'all') }
-   id: style6
    label: Line 6 Style
    base_key: style1
    hide: ${ ('part' if int(nconnections) >= 6 else 'all') }
-   id: marker6
    label: Line 6 Marker
    base_key: marker1
    hide: ${ ('part' if int(nconnections) >= 6 else 'all') }
-   id: alpha6
    label: Line 6 Alpha
    base_key: alpha1
    hide: ${ ('part' if int(nconnections) >= 6 else 'all') }
-   id: label7
    label: Line 7 Label
    base_key: label1
    default: "Signal 7"
    hide: ${ ('part' if int(nconnections) >= 7 else 'all') }
-   id: width7
    label: Line 7 Width
    base_key: width1
    hide: ${ ('part' if int(nconnections) >= 7 else 'all') }
-   id: color7
    label: Line 7 Color
    base_key: color1
    default: '"yellow"'
    hide: ${ ('part' if int(nconnections) >= 7 else 'all') }
-   id: style7
    label: Line 7 Style
    base_key: style1
    hide: ${ ('part' if int(nconnections) >= 7 else 'all') }
-   id: marker7
    label: Line 7 Marker
    base_key: marker1
    hide: ${ ('part' if int(nconnections) >= 7 else 'all') }
-   id: alpha7
    label: Line 7 Alpha
    base_key: alpha1
    hide: ${ ('part' if int(nconnections) >= 7 else 'all') }
-   id: label8
    label: Line 8 Label
    base_key: label1
    default: "Signal 8"
    hide: ${ ('part' if int(nconnections) >= 8 else 'all') }
-   id: width8
    label: Line 8 Width
    base_key: width1
    hide: ${ ('part' if int(nconnections) >= 8 else 'all') }
-   id: color8
    label: Line 8 Color
    base_key: color1
    default: '"dark red"'
    hide: ${ ('part' if int(nconnections) >= 8 else 'all') }
-   id: style8
    label: Line 8 Style
    base_key: style1
    hide: ${ ('part' if int(nconnections) >= 8 else 'all') }
-   id: marker8
    label: Line 8 Marker
    base_key: marker1
    hide: ${ ('part' if int(nconnections) >= 8 else 'all') }
-   id: alpha8
    label: Line 8 Alpha
    base_key: alpha1
    hide: ${ ('part' if int(nconnections) >= 8 else 'all') }
-   id: label9
    label: Line 9 Label
    base_key: label1
    default: "Signal 9"
    hide: ${ ('part' if int(nconnections) >= 9 else 'all') }
-   id: width9
    label: Line 9 Width
    base_key: width1
    hide: ${ ('part' if int(nconnections) >= 9 else 'all') }
-   id: color9
    label: Line 9 Color
    base_key: color1
    default: '"dark green"'
    hide: ${ ('part' if int(nconnections) >= 9 else 'all') }
-   id: style9
    label: Line 9 Style
    base_key: style1
    hide: ${ ('part' if int(nconnections) >= 9 else 'all') }
-   id: marker9
    label: Line 9 Marker
    base_key: marker1
    hide: ${ ('part' if int(nconnections) >= 9 else 'all') }
-   id: alpha9
    label: Line 9 Alpha
    base_key: alpha1
    hide: ${ ('part' if int(nconnections) >= 9 else 'all') }
-   id: label10
    label: Line 10 Label
    base_key: label1
    default: "Signal 10"
    hide: ${ ('part' if int(nconnections) >= 10 else 'all') }
-   id: width10
    label: Line 10 Width
    base_key: width1
    hide: ${ ('part' if int(nconnections) >= 10 else 'all') }
-   id: color10
    label: Line 10 Color
    base_key: color1
    default: '"dark blue"'
    hide: ${ ('part' if int(nconnections) >= 10 else 'all') }
-   id: style10
    label: Line 10 Style
    base_key: style1
    hide: ${ ('part' if int(nconnections) >= 10 else 'all') }
-   id: marker10
    label: Line 10 Marker
    base_key: marker1
    hide: ${ ('part' if int(nconnections) >= 10 else 'all') }
-   id: alpha10
    label: Line 10 Alpha
    base_key: alpha1
    hide: ${ ('part' if int(nconnections) >= 10 else 'all') }

inputs:
-   domain: stream
    dtype: ${ type.t }
    multiplicity: ${ (0 if type.t == 'message' else nconnections) }
    optional: true

outputs:
-   domain: message
    id: freq
    optional: true
asserts:
- ${ len(placement) == 4 or len(placement) == 2 }
- ${ all([i >= 0 for i in placement]) }

templates:
    imports: import bokehgui
    make: |+
        bokehgui.${type.fcn}(${fftsize},
                             ${wintype},
                             ${fc}, ${bw},
                             ${name},\
                             % if type.t == 'message':
                               0\
                            % else:
                             ${nconnections}\
                             % endif
                            )

        labels = [${label1}, ${label2}, ${label3}, ${label4}, ${label5},
                  ${label6}, ${label7}, ${label8}, ${label9}, ${label10}]
        legend_list = []

        for i in  range(\
        % if type.t == 'message' :
           1\
        % else:
        ${nconnections}\
        %endif
        ):
            if len(labels[i]) == 0:
                legend_list.append("Data {0}".format(i))
            else:
                legend_list.append(labels[i])

        self.${id}_plot = bokehgui.${type.plot}(self.plot_lst, self.${id}, update_time = ${update_time}, legend_list = legend_list, is_message =\
        % if type.t == 'message':
           True\
        % else:
        False\
        % endif
        )

        self.${id}_plot.set_y_axis([${ymin}, ${ymax}])
        % if (yunit == ''):
        self.${id}_plot.set_y_label(${ylabel})
        % else:
        self.${id}_plot.set_y_label(${ylabel} + '(' +${yunit}+')')
        % endif
        % if (xunit == ''):
        self.${id}_plot.set_x_label(${xlabel})
        % else:
        self.${id}_plot.set_x_label(${xlabel} + '(' +${xunit}+')')
        % endif

        self.${id}_plot.set_trigger_mode(${tr_mode},${tr_level}, ${tr_chan}, ${tr_tag})

        self.${id}_plot.enable_grid(${grid})
        self.${id}_plot.enable_axis_labels(${axislabels})
        self.${id}_plot.enable_legend(${legend})
        % if (type == 'float' or type == 'msg_float'):
        self.${id}_plot.set_plot_pos_half(${freqhalf})
        % endif
        self.${id}_plot.set_layout(*(${placement}))
        % if maxhold == 'True':
        self.${id}_plot.enable_max_hold()
        % endif
        colors = [${color1}, ${color2}, ${color3}, ${color4}, ${color5},
                  ${color6}, ${color7}, ${color8}, ${color9}, ${color10}]
        widths = [${width1}, ${width2}, ${width3}, ${width4}, ${width5},
                  ${width6}, ${width7}, ${width8}, ${width9}, ${width10}]
        styles = [${style1}, ${style2}, ${style3}, ${style4}, ${style5},
                  ${style6}, ${style7}, ${style8}, ${style9}, ${style10}]
        markers = [${marker1}, ${marker2}, ${marker3}, ${marker4}, ${marker5},
                   ${marker6}, ${marker7}, ${marker8}, ${marker9}, ${marker10}]
        alphas = [${alpha1}, ${alpha2}, ${alpha3}, ${alpha4}, ${alpha5},
                  ${alpha6}, ${alpha7}, ${alpha8}, ${alpha9}, ${alpha10}]

        for i in  range(\
        % if type.t == 'message' :
           1\
        % else:
        ${nconnections}\
        % endif
        ):
            self.${id}_plot.format_line(i, colors[i], widths[i], styles[i], markers[i], alphas[i])

    callbacks:
    - set_frequency_range(${fc}, ${bw})
    # - set_title(${which}, ${title})
    # - set_color(${which}, ${color})
    - self.${id}_plot.set_y_axis([${ymin}, ${ymax}])
    - self.${id}_plot.set_trigger_mode(${tr_mode}, ${tr_level}, ${tr_chan}, ${tr_tag})

documentation: ""

file_format: 1
